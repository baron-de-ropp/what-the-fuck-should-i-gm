#!/usr/bin/python3
from random import choice

class FuckingAdventure:
    do = ""
    something = ""
    at = ""
    complicated_by = ""
    oppsed_by = ""
    description = ""


    def __init__(self):
        self.do = choice(['assassinate', 'assist', 'find', 'retrieve', 'race', 'negotiate with', 'join', 'steal', 'combat', 'discover','protect', 'attack', 'server', 'defend', 'take', 'escape from', 'guide', 'avenge', 'liberate', 'foil', 'guard', 'explore', 'journey to/with', 'create', 'chase', 'quest For', 'escort', 'rescue', 'meet', 'resist', 'repel', 'safeguard', 'disguise', 'travel with', 'deliver', 'defeat', 'investigate', 'support', 'destroy', 'Battle', 'move', 'track', 'aid', 'assault', 'get past', 'fight', 'protect', 'trap', 'conceal', 'obliterate', 'encounter', 'oppose', 'speak with', 'obeserve', 'fight', 'locate','strike', 'reveal', 'beset', 'shield', 'contend with','infiltrate', 'kill', 'save'])
        self.something = choice(['angel', 'demon', 'treasure', 'wizard', 'god', 'army', 'monster', 'new race', 'princes', 'magical event','barbarian', 'warrior', 'magic', 'dragon', 'guards', 'government', 'thief', 'organization', 'merchant','stranger', 'artifact', 'dungeon', 'humanoid', 'abberation', 'friend', 'giant', 'secret', 'woman', 'noble','kingdom', 'castle', 'outsider', 'magical beast', 'enemy', 'warlord', 'item', 'man', 'child', 'weapon','love interest', 'soldiers', 'undead', 'gem or jewel', 'secret', 'construct', 'creature', 'animal','sorcerer', 'bard', 'villain', 'ally', 'rival', 'priest', 'ruler', 'magic item', 'humanoid', 'monk','rogue', 'village', 'peasants', 'oracle', 'map', 'prophecy'])
        self.at = choice(['mountain', 'jungle', 'battlefield', 'frontier', 'Wasteland', 'fortress', 'city', 'underground','the north', 'castle', 'villain\'s lair', 'desert', 'ocean', 'dungeon', 'plains', 'nearby kingdom','another plane', 'distant kingdom', 'wizards\' tower', 'ship', 'city', 'cavern', 'monster\'s lair','stronghold', 'ruins', 'village', 'outlands', 'secret location', 'forest', 'palace', 'swamp', 'tomb','bazzar', 'Keep', 'Temple', 'foreign lands', 'evil land',  'tavern', 'guild hall', 'dungeon', 'road','hamlet', 'port', 'cave', 'subterranean city', 'border', 'sepulcher', 'lost city', 'underworld','trade route', 'woods', 'hills', 'fane', 'town', 'across the sea', 'sky', 'citadel', 'the south', 'dungeon','the west', 'manor', 'catacombs', 'the east', 'vault'])
        self.complicated_by = choice(['none', 'betrayal', 'rivalry', 'trap', 'royal influence', 'magical event', 'trickery', 'religion','travel', 'squabbling', 'distractions', 'abduction', 'barriers', 'war', 'diplomacy', 'ambush', 'magic','race', 'monsters', 'politics', 'theft', 'mystery', 'vendetta', 'ambush', 'fear', 'mistaken identity','power struggle', 'enemy', 'travel problem', 'criminals', 'superstition', 'drugs', 'construct','language', 'battle', 'weather', 'being side-tracked', 'misdirection', 'bureaucracy', 'insanity','enemies', 'interference', 'attention', 'exploration', 'equipment failure', 'military influence','god(s)', 'invasion', 'money', 'monsters', 'getting lost', 'red herring', 'disaster','guild influence', 'interested parties', 'recurring NPC', 'differing PC motivations', 'spies','legal trouble', 'lack of trust', 'desperation', 'love interest', 'puzzles', 'double-cross', 'riddles'])
        self.opposed_by = choice(['government official', 'barbarian', 'gang', 'mercenary', 'spy', 'sorcerer', 'construct', 'guild','creature', 'enemy', 'villain', 'criminals', 'dragon', 'outsider', 'assassin', 'monster', 'ruler','shadowy figure', 'wizard', 'warrior', 'humanoid', 'warlord', 'undead', 'abberation', 'former ally','stranger', 'watchmen', 'military', 'veteran', 'none', 'giants', 'outlaw', 'humanoid', 'priest', 'thief','magic-user', 'demon/devil', 'merchant', 'invader', 'traitor', 'dragon', 'war', 'enemy', 'monster','lunatic', 'recurring NPC', 'gods', 'cult', 'fanatic', 'conspiracy', 'nation', 'magical beast','adventurer', 'enemy', 'humanoid', 'time', 'friend', 'mastermind', 'hazardous environment', 'artifact','puzzle', 'champion', 'immortal'])
        self.description = "The fucking party must %s %s at %s, complicated by %s, and opposed by %s." % (self.do, self.something, self.at, self.complicated_by, self.opposed_by)